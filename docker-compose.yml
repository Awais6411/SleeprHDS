version: '3'
services:

  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile  
      target: development
    command: npm run start:dev reservations
    env_file:
      - ./apps/reservations/.env
    environment:
      # DATABASE_URL: mysql://awais:awaisUser123@db:3306/microservices
      TYPE: mysql                             # Database type
      HOST: db                                # Host should match the service name of MySQL in Docker Compose
      PORT: 3306                              # Internal MySQL port, not the exposed one
      USER_NAME: awais                        # Username for the database connection
      PASSWORD: awaisUser123                  # Password for the database user
      DATABASE_NAME: microservices
    ports:
      - '3000:3000'
    volumes:
      - .:/usr/src/app 
    depends_on:
      - db
  
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile  
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    environment:
      TYPE: mysql                             # Database type
      HOST: db                                # Host should match the service name of MySQL in Docker Compose
      PORT: 3306                              # Internal MySQL port, not the exposed one
      USER_NAME: awais                        # Username for the database connection
      PASSWORD: awaisUser123                  # Password for the database user
      DATABASE_NAME: microservices
    ports:
      - '3001:3001'
    volumes:
      - .:/usr/src/app 
    depends_on:
      - db

  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile  
      target: development
    command: npm run start:dev payments
    env_file:
      - ./apps/payments/.env
    environment:
      TYPE: mysql                             # Database type
      HOST: db                                # Host should match the service name of MySQL in Docker Compose
      PORT: 3306                              # Internal MySQL port, not the exposed one
      USER_NAME: awais                        # Username for the database connection
      PASSWORD: awaisUser123                  # Password for the database user
      DATABASE_NAME: microservices
    ports:
      - '3003:3003'
    volumes:
      - .:/usr/src/app 
    depends_on:
      - db

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile  
      target: development
    command: npm run start:dev notifications
    env_file:
      - ./apps/notifications/.env
    environment:
      TYPE: mysql                             # Database type
      HOST: db                                # Host should match the service name of MySQL in Docker Compose
      PORT: 3306                              # Internal MySQL port, not the exposed one
      USER_NAME: awais                        # Username for the database connection
      PASSWORD: awaisUser123                  # Password for the database user
      DATABASE_NAME: microservices
    volumes:
      - .:/usr/src/app 
    depends_on:
      - db


  db:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: awaisRoot123 # Set a strong password for root.
      MYSQL_DATABASE: microservices       # Your database name.
      MYSQL_USER: awais               # Your new non-root username.
      MYSQL_PASSWORD: awaisUser123 
    ports:
      - "3307:3306"
    volumes:
      - db-data:/var/lib/mysql

volumes:
  db-data:
